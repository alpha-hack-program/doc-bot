# PIPELINE DEFINITION
# Name: download-and-load-pdfs-from-minio-pipeline
# Description: A pipeline to download and load PDFs from a MinIO instance.
components:
  comp-download-files:
    executorLabel: exec-download-files
    outputDefinitions:
      parameters:
        download_path:
          parameterType: STRING
  comp-load-files:
    executorLabel: exec-load-files
    inputDefinitions:
      parameters:
        download_path:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-download-files:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - download_files
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'boto3' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef download_files(download_path: OutputPath(str)):\n    download_files_func(download_path)\n\
          \n"
        image: quay.io/modh/runtime-images:runtime-cuda-tensorflow-ubi9-python-3.9-2023b-20240301
    exec-load-files:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - load_files
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'boto3' 'langchain'\
          \ 'langchain-community' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef load_files(download_path: InputPath(str)):\n    load_files_func(download_path)\n\
          \n"
        image: quay.io/modh/runtime-images:runtime-cuda-tensorflow-ubi9-python-3.9-2023b-20240301
pipelineInfo:
  description: A pipeline to download and load PDFs from a MinIO instance.
  name: download-and-load-pdfs-from-minio-pipeline
root:
  dag:
    tasks:
      download-files:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-download-files
        taskInfo:
          name: download-files
      load-files:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-load-files
        dependentTasks:
        - download-files
        inputs:
          parameters:
            download_path:
              taskOutputParameter:
                outputParameterKey: download_path
                producerTask: download-files
        taskInfo:
          name: load-files
schemaVersion: 2.1.0
sdkVersion: kfp-2.7.0
---
platforms:
  kubernetes:
    deploymentSpec:
      executors:
        exec-download-files:
          secretAsEnv:
          - keyToEnv:
            - envVar: AWS_ACCESS_KEY_ID
              secretKey: AWS_ACCESS_KEY_ID
            - envVar: AWS_SECRET_ACCESS_KEY
              secretKey: AWS_SECRET_ACCESS_KEY
            - envVar: AWS_DEFAULT_REGION
              secretKey: AWS_DEFAULT_REGION
            - envVar: AWS_S3_BUCKET
              secretKey: AWS_S3_BUCKET
            - envVar: AWS_S3_ENDPOINT
              secretKey: AWS_S3_ENDPOINT
            secretName: aws-connection-documents
        exec-load-files:
          secretAsEnv:
          - keyToEnv:
            - envVar: AWS_ACCESS_KEY_ID
              secretKey: AWS_ACCESS_KEY_ID
            - envVar: AWS_SECRET_ACCESS_KEY
              secretKey: AWS_SECRET_ACCESS_KEY
            - envVar: AWS_DEFAULT_REGION
              secretKey: AWS_DEFAULT_REGION
            - envVar: AWS_S3_BUCKET
              secretKey: AWS_S3_BUCKET
            - envVar: AWS_S3_ENDPOINT
              secretKey: AWS_S3_ENDPOINT
            secretName: aws-connection-documents
          - keyToEnv:
            - envVar: MILVUS_HOST
              secretKey: MILVUS_HOST
            - envVar: MILVUS_PORT
              secretKey: MILVUS_PORT
            - envVar: MILVUS_USERNAME
              secretKey: MILVUS_USERNAME
            - envVar: MILVUS_PASSWORD
              secretKey: MILVUS_PASSWORD
            - envVar: MILVUS_COLLECTION_NAME
              secretKey: MILVUS_COLLECTION_NAME
            secretName: milvus-connection-documents
