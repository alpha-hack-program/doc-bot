apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.modelApplication.name }}
  namespace: {{ .Values.argocdNamespace }}
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: "{{ .Values.dataScienceProjectNamespace }}"
  source:
    path: "{{ .Values.modelApplication.path }}"
    repoURL: "{{ .Values.modelApplication.repoURL }}"
    targetRevision: "{{ .Values.modelApplication.targetRevision }}"
    helm:
      values: |
        argocdNamespace: {{ .Values.argocdNamespace }}
        createNamespace: false
        instanceName: {{ .Values.modelApplication.model.name }}
        dataScienceProjectNamespace: {{ .Values.dataScienceProjectNamespace }}
        dataScienceProjectDisplayName: {{ .Values.dataScienceProjectDisplayName }}
        model:
          root: {{ .Values.modelApplication.model.root }}
          id: {{ .Values.modelApplication.model.id }}
          name: {{ .Values.modelApplication.model.name }}
          displayName: {{ .Values.modelApplication.model.displayName }}
          maxModelLen: {{ .Values.modelApplication.model.maxModelLen }}
          enableAuth: {{ .Values.modelApplication.model.enableAuth }}
          rawDeployment: {{ .Values.modelApplication.model.rawDeployment }}
          runtime:
            templateName: {{ .Values.modelApplication.model.runtime.templateName }}
            templateDisplayName: {{ .Values.modelApplication.model.runtime.templateDisplayName }}
            image: {{ .Values.modelApplication.model.runtime.image }}
            resources:
              limits:
                cpu: '{{ .Values.modelApplication.model.runtime.resources.limits.cpu }}'
                memory: {{ .Values.modelApplication.model.runtime.resources.limits.memory }}
              requests:
                cpu: '{{ .Values.modelApplication.model.runtime.resources.requests.cpu }}'
                memory: {{ .Values.modelApplication.model.runtime.resources.requests.memory }}
          accelerator:
            productName: {{ .Values.modelApplication.model.accelerator.productName }}
            min: {{ .Values.modelApplication.model.accelerator.min }}
            max: {{ .Values.modelApplication.model.accelerator.max }}
          connection:
            createSecret: {{ .Values.modelApplication.model.connection.createSecret }}
            name: {{ .Values.modelApplication.model.connection.name }}
            displayName: {{ .Values.modelApplication.model.connection.displayName }}
            type: {{ .Values.modelApplication.model.connection.type }}
            scheme: {{ .Values.modelApplication.model.connection.scheme }}
            awsAccessKeyId: {{ .Values.modelApplication.model.connection.awsAccessKeyId }}
            awsSecretAccessKey: {{ .Values.modelApplication.model.connection.awsSecretAccessKey }}
            awsDefaultRegion: {{ .Values.modelApplication.model.connection.awsDefaultRegion }}
            awsS3Bucket: {{ .Values.modelApplication.model.connection.awsS3Bucket }}
            awsS3Endpoint: {{ .Values.modelApplication.model.connection.awsS3Endpoint }}
  syncPolicy:
    automated:
      # prune: true
      selfHeal: true