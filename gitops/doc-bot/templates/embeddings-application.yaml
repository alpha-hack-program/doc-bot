apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.embeddingsApplication.name }}
  namespace: {{ .Values.argocdNamespace }}
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: "{{ .Values.dataScienceProjectNamespace }}"
  source:
    path: "{{ .Values.embeddingsApplication.path }}"
    repoURL: "{{ .Values.embeddingsApplication.repoURL }}"
    targetRevision: "{{ .Values.embeddingsApplication.targetRevision }}"
    helm:
      helm:
      values: |
        dataScienceProjectDisplayName: {{ .Values.dataScienceProjectNamespace }}
        dataScienceProjectNamespace: {{ .Values.dataScienceProjectNamespace }}
        
        createNamespace: false

        instanceName: {{ .Values.embeddings.name }}

        model:
          root: {{ .Values.embeddings.root }}
          id: {{ .Values.embeddings.id }}
          name: {{ .Values.embeddings.name }}
          displayName: {{ .Values.embeddings.displayName }}
          maxReplicas: {{ .Values.embeddings.maxReplicas }}
          format: {{ .Values.embeddings.format }}
          maxModelLen: {{ .Values.embeddings.maxModelLen }}
          apiProtocol: {{ .Values.embeddings.apiProtocol }}
          embeddingsModel: true
          enableAuth: false
          rawDeployment: true
          runtime:
            templateName: {{ .Values.embeddings.runtime.templateName }}
            templateDisplayName: {{ .Values.embeddings.runtime.templateDisplayName }}
            image: {{ .Values.embeddings.runtime.image }}
            resources:
              limits:
                cpu: {{ .Values.embeddings.runtime.resources.limits.cpu }}
                memory: {{ .Values.embeddings.runtime.resources.limits.memory }}
              requests:
                cpu: {{ .Values.embeddings.runtime.resources.requests.cpu }}
                memory: {{ .Values.embeddings.runtime.resources.requests.memory }}
        {{- if .Values.embeddings.accelerator }}
          accelerator:
            max: {{ .Values.embeddings.accelerator.max }}
            min: {{ .Values.embeddings.accelerator.min }}
            productName: {{ .Values.embeddings.accelerator.productName }}
        {{- end }}
          connection:
            name: {{ .Values.embeddings.connection.name }}
            createSecret: {{ .Values.embeddings.connection.createSecret }}
            displayName: {{ .Values.embeddings.connection.displayName }}
            type: {{ .Values.embeddings.connection.type }}
            scheme: {{ .Values.embeddings.connection.scheme }}
            awsAccessKeyId: {{ .Values.embeddings.connection.awsAccessKeyId }}
            awsSecretAccessKey: {{ .Values.embeddings.connection.awsSecretAccessKey }}
            awsDefaultRegion: {{ .Values.embeddings.connection.awsDefaultRegion }}
            awsS3Bucket: {{ .Values.embeddings.connection.awsS3Bucket }}
            awsS3Endpoint: {{ .Values.embeddings.connection.awsS3Endpoint }}
          volumes:
            shm:
              sizeLimit: {{ .Values.embeddings.volumes.shm.sizeLimit }}
  syncPolicy:
    automated:
      # prune: true
      selfHeal: true