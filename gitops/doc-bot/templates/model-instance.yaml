---
apiVersion: serving.kserve.io/v1beta1
kind: InferenceService
metadata:
  annotations:
    openshift.io/display-name: "{{ .Values.model.displayName }}"
    serving.knative.openshift.io/enablePassthrough: 'true'
    sidecar.istio.io/inject: 'true'
    sidecar.istio.io/rewriteAppHTTPProbers: 'true'
  name: {{ .Values.model.name }}
  namespace: {{ .Values.dataScienceProjectNamespace }}
  labels:
    opendatahub.io/dashboard: 'true'
spec:
  predictor:
    maxReplicas: {{ .Values.model.maxReplicas }}
    minReplicas: 1
    model:
      modelFormat:
        name: {{ .Values.model.format }}
      name: ''
      resources:
        limits:
          nvidia.com/gpu: '{{ .Values.model.accelerator.max }}'
        requests:
          nvidia.com/gpu: '{{ .Values.model.accelerator.min }}'
      runtime: {{ .Values.model.name }}
      storage:
        key: aws-connection-{{ .Values.model.connection.name }}
        path: {{ .Values.model.connection.path }}
    tolerations:
      - effect: NoSchedule
        key: nvidia.com/gpu
        operator: Exists
    nodeSelector:
      nvidia.com/gpu.product: {{ .Values.model.accelerator.productName }}
---
apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
metadata:
  annotations:
    opendatahub.io/accelerator-name: migrated-gpu
    opendatahub.io/apiProtocol: {{ .Values.model.apiProtocol }}
    opendatahub.io/template-display-name: "{{ .Values.model.runtime.templateDisplayName }}"
    opendatahub.io/template-name: "{{ .Values.model.runtime.templateName }}"
    openshift.io/display-name: "{{ .Values.model.displayName }}"
  name: {{ .Values.model.name }}
  labels:
    opendatahub.io/dashboard: 'true'
spec:
  builtInAdapter:
    modelLoadingTimeoutMillis: 90000
  containers:
    - args:
        - '--model'
        - /mnt/models/
        - '--download-dir'
        - /models-cache
        - '--port'
        - '8080'
        - '--max-model-len'
        - '6144'
        {{- if eq .Values.model.accelerator.productName "Tesla-T4" }}
        - '--dtype'
        - float16
        - '--tensor-parallel-size={{ .Values.model.accelerator.max }}'
        {{- end }}
      image: '{{ .Values.model.runtime.image }}'
      name: kserve-container
      ports:
        - containerPort: 8080
          name: http1
          protocol: TCP
      resources:
        limits:
          cpu: '{{ .Values.model.runtime.resources.limits.cpu }}'
          memory: '{{ .Values.model.runtime.resources.limits.memory }}'
        requests:
          cpu: '{{ .Values.model.runtime.resources.requests.cpu }}'
          memory: '{{ .Values.model.runtime.resources.requests.memory }}'
      volumeMounts:
        - mountPath: /dev/shm
          name: shm
  multiModel: false
  supportedModelFormats:
    - autoSelect: true
      name: {{ .Values.model.format }}
  volumes:
    - emptyDir:
        medium: Memory
        sizeLimit: {{ .Values.model.volumes.shm.sizeLimit }}
      name: shm
